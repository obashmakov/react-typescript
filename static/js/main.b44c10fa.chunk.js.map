{"version":3,"sources":["components/NavBar.tsx","pages/AboutPage.tsx","components/TodoForm.tsx","components/TodoList.tsx","pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","to","AboutPage","history","useHistory","onClick","push","TodoForm","props","ref","useRef","type","id","placeholder","onKeyPress","event","key","onAdd","current","value","htmlFor","TodoList","todos","onRemove","onToggle","length","map","todo","classes","completed","join","checked","onChange","title","preventDefault","removeHandler","TodosPage","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","window","confirm","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGaA,EAAmB,kBAC9B,8BACE,sBAAKC,UAAU,kCAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,aAA1B,gCACA,qBAAIA,UAAU,6BAAd,UACE,6BACE,cAAC,IAAD,CAASC,GAAG,IAAZ,6BAIF,6BACE,cAAC,IAAD,CAASA,GAAG,SAAZ,iCCXGC,EAAsB,WACjC,IAAMC,EAAUC,cAEhB,OACE,qCACE,2CACA,+PAMA,wBAAQJ,UAAU,MAAMK,QAAS,kBAAMF,EAAQG,KAAK,MAApD,+B,gBCTOC,EAAoC,SAACC,GAEhD,IAAMC,EAAMC,iBAAyB,MAerC,OACE,sBAAKV,UAAU,kBAAf,UACE,uBACEW,KAAK,OACLC,GAAG,QACHC,YAAY,aAGZJ,IAAKA,EACLK,WAlBkB,SAACC,GACL,UAAdA,EAAMC,MACRR,EAAMS,MAAMR,EAAIS,QAASC,OACzBV,EAAIS,QAASC,MAAQ,OAiBrB,uBAAOC,QAAQ,QAAQpB,UAAU,SAAjC,4BCzBOqB,EAAoC,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACnE,GAAqB,IAAjBF,EAAMG,OACR,OAAO,mBAAGzB,UAAU,SAAb,0BAST,OACE,6BACGsB,EAAMI,KAAI,SAAAC,GACT,IAAMC,EAAU,CAAC,QAMjB,OAJID,EAAKE,WACPD,EAAQtB,KAAK,aAIb,oBAAIN,UAAW4B,EAAQE,KAAK,KAA5B,SACA,kCACE,uBACEnB,KAAK,WACLoB,QAASJ,EAAKE,UACdG,SAAU,kBAAMR,EAASG,EAAKf,OAEhC,+BAAOe,EAAKM,QACZ,mBACEjC,UAAU,0BACVK,QAAS,SAAAU,GAAK,OA1BJ,SAACA,EAAyBH,GAC9CG,EAAMmB,iBAENX,EAASX,GAuBmBuB,CAAcpB,EAAOY,EAAKf,KAF9C,wBARqCe,EAAKf,UCzBzCwB,EAAsB,WAAO,IAAD,EACbC,mBAAkB,IADL,mBAChCf,EADgC,KACzBgB,EADyB,KAGvCC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAE1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAUxB,MAC5C,CAACA,IA8BJ,OACE,qCACE,cAAC,EAAD,CAAUL,MA9BE,SAACgB,GACf,IAAMc,EAAiB,CACrBd,QACArB,GAAIoC,KAAKC,MACTpB,WAAW,GAGbS,GAAS,SAAAY,GAAI,OAAKH,GAAL,mBAAiBG,UAwB5B,cAAC,EAAD,CACE5B,MAAOA,EACPE,SAvBe,SAACZ,GACpB0B,EAAShB,EAAMI,KAAI,SAAAC,GAKjB,OAJIA,EAAKf,KAAOA,IACde,EAAKE,WAAaF,EAAKE,WAGlBF,OAkBLJ,SAdgB,SAACX,GACAuC,OAAOC,QAAQ,wCAGlCd,GAAS,SAAAY,GAAI,OAAIA,EAAKG,QAAO,SAAA1B,GAAI,OAAIA,EAAKf,KAAOA,eCtBxC0C,EAdO,WACpB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKtD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuD,UAAWnB,EAAWoB,KAAK,IAAIC,OAAK,IAC3C,cAAC,IAAD,CAAOF,UAAWrD,EAAWsD,KAAK,oBCC7BE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b44c10fa.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar: React.FC = () => (\n  <nav>\n    <div className=\"nav-wrapper purple darken-2 px1\">\n      <NavLink to=\"/\" className=\"brand-logo\">React + TypeScript</NavLink>\n      <ul className=\"right hide-on-med-and-down\">\n        <li>\n          <NavLink to=\"/\">\n            List of todos\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">\n            About us\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport const AboutPage: React.FC = () => {\n  const history = useHistory();\n\n  return (\n    <>\n      <h1>Info Page</h1>\n      <p>\n        Lorem ipsum dolor, sit amet consectetur adipisicing elit. \n        Vero consectetur dolor eum, ad voluptatem illum rerum dolorum, \n        earum nam neque perferendis rem soluta culpa, \n        delectus accusantium eveniet numquam tempora molestiae?\n      </p>\n      <button className=\"btn\" onClick={() => history.push('/')}>\n        Back to todos\n      </button>\n    </>\n  )\n};\n","import React, { useRef } from 'react';\n\ninterface TodoFormProps {\n  onAdd(title: string): void\n}\n\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\n  // const [title, setTitle] = useState<string>('');\n  const ref = useRef<HTMLInputElement>(null);\n\n  // const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   setTitle(event.target.value)\n  // };\n\n  const keyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      props.onAdd(ref.current!.value)\n      ref.current!.value = '';\n  //     console.log(title);\n  //     setTitle('');\n    }\n  };\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        type=\"text\"\n        id=\"title\" \n        placeholder=\"Enter todo\"\n        // value={title}\n        // onChange={changeHandler}\n        ref={ref}\n        onKeyPress={keyPressHandler}\n      />\n      <label htmlFor=\"title\" className=\"active\">Enter todo</label>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ITodo } from '../interfaces';\n\ntype TodoListProps = {\n  todos: ITodo[],\n  onToggle(id: number): void,\n  onRemove(id: number): void,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos, onRemove, onToggle }) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">No todos yet</p>\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n\n    onRemove(id)\n  };\n\n  return (\n    <ul>\n      {todos.map(todo => {\n        const classes = ['todo'];\n\n        if (todo.completed) {\n          classes.push('completed')\n        } \n\n        return (\n          <li className={classes.join(' ')} key={todo.id}>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={todo.completed}\n              onChange={() => onToggle(todo.id)}\n            />\n            <span>{todo.title}</span>\n            <i\n              className=\"material-icons red-text\"\n              onClick={event => removeHandler(event, todo.id)}\n            >\n              delete\n            </i>\n          </label>\n        </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoForm } from '../components/TodoForm';\nimport { TodoList } from '../components/TodoList';\nimport { ITodo } from '../interfaces'; \n\nexport const TodosPage: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem('todos') || '[]') as ITodo[];\n\n    setTodos(saved);\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos])\n\n  const addTodo = (title: string) => {\n    const newTodo: ITodo = {\n      title,\n      id: Date.now(),\n      completed: false,\n    }\n    // setTodos([newTodo, ...todos])\n    setTodos(prev => [newTodo, ...prev])\n  };\n\n  const toggleHandle = (id: number) => {\n    setTodos(todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n\n      return todo;\n    }));\n  };\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = window.confirm('Are you sure you want to delete it?')\n\n    if (shouldRemove) {\n      setTodos(prev => prev.filter(todo => todo.id !== id));\n    }\n  };\n\n  return (\n    <>\n      <TodoForm onAdd={addTodo} />\n      <TodoList\n        todos={todos}\n        onToggle={toggleHandle}\n        onRemove={removeHandler}\n      />\n    </>\n  );\n};\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { NavBar } from './components/NavBar';\nimport { AboutPage } from './pages/AboutPage';\nimport { TodosPage } from './pages/TodosPage';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <div className=\"container\">\n        <Switch>\n          <Route component={TodosPage} path=\"/\" exact/>\n          <Route component={AboutPage} path=\"/about\" />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}